# Generated by Django 2.1.15 on 2020-05-29 09:56

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import l_core.mixins
import statement.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dict_register', '0001_initial'),
        ('l_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_uuid', models.UUIDField(default=uuid.uuid4)),
                ('date_add', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_edit', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('count', models.IntegerField(default=1)),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='additionalservice_author', to=settings.AUTH_USER_MODEL)),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='additionalservice_editor', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.CoreOrganization')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dict_register.Product')),
            ],
            options={
                'abstract': False,
            },
            bases=(l_core.mixins.CheckProtected, l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.CreateModel(
            name='SEDStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_uuid', models.UUIDField(default=uuid.uuid4)),
                ('date_add', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_edit', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('int_access_to_SEV_OVV', models.BooleanField(default=True, verbose_name='Надання доступу шляхом підключення СЕД до СЕВ ОВВ')),
                ('web_access_count', models.IntegerField(default=0, verbose_name='Надання веб-доступу (за кожного додаткового користувача) на місяць')),
                ('web_service_install_crypto_autograph', models.BooleanField(default=False, verbose_name='Послуги по установці на ПК користувача засобу криптографічного захисту інформації "Крипто автограф"')),
                ('crypto_autograph_count', models.IntegerField(default=0, null=True, verbose_name='Кількість крипто-автографу')),
                ('web_service_install_cisco_vpn_onPC', models.BooleanField(default=False, verbose_name='Послуги по установці на ПК користувача програмного криптографічного захисту інформації CISCO U VPN-ZAS')),
                ('install_cisco_vpn_onPC_count', models.IntegerField(default=0, null=True, verbose_name='Кількість VPN')),
                ('web_service_install_cisco_vpn_onServer', models.BooleanField(default=False, verbose_name='Послуги по установці на серверну частину клієнта програмного криптографічного захисту інформації CISCO U VPN-ZAS')),
                ('web_service_study_SEV_OVV', models.BooleanField(default=False, verbose_name='Послуги по навчанню на робочому місці користувача системи електронної взаємодії органів виконавчої влади версія 2.0')),
                ('web_seminar_use_IT_in_SEV_OVV', models.BooleanField(default=False, verbose_name='Навчально-консультаційний семінар-практикум «Застосування інформаційних технологій в роботі СЕВ ОВВ» на одну особу')),
                ('statement_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата заявки')),
                ('control_date', models.DateField(default=statement.models.calc_control_data, null=True, verbose_name='Дата заявки')),
                ('reg_number', models.TextField(default='-', verbose_name='Номер заявки')),
                ('ecp_certificate', models.FileField(null=True, upload_to='', verbose_name='ЕЦП відкритий ключ')),
                ('statement_type', models.CharField(choices=[('integration', 'Інтеграція'), ('web', 'Веб-доступ')], max_length=50, verbose_name='Тип заявки')),
                ('status', models.CharField(choices=[('1', 'Нова'), ('2', 'Відпрацьована'), ('3', 'Узгодження реквізитів'), ('4', 'Відправлено на підпис конрагенту'), ('5', 'Відмовлено'), ('6', 'Договір підписано'), ('7', 'Прострочена')], default='1', max_length=50, verbose_name='Статус заявки')),
                ('is_send_to_technician', models.BooleanField(default=False, verbose_name='Направлено в технічний відділ?')),
                ('is_contractor_connected', models.BooleanField(default=False, verbose_name='Контрагента підключено?')),
                ('statement_doc', models.FileField(null=True, upload_to='', verbose_name='Заява на підключення')),
                ('statement_doc_sign', models.FileField(null=True, upload_to='', verbose_name='Підпис')),
                ('verified', models.BooleanField(default=False, verbose_name='Підпис заяви перевірено?')),
                ('sign_is_valid', models.BooleanField(default=False, verbose_name='Підпис заяви валідний?')),
                ('sign_b64', models.TextField(null=True)),
                ('verify_result', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('statute_copy', models.FileField(null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg'])], verbose_name='Статутні документи')),
                ('all_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('note', models.TextField(null=True, verbose_name='Примітка')),
                ('author', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sedstatement_author', to=settings.AUTH_USER_MODEL)),
                ('contractor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sedstatement_contractor', to='l_core.CoreOrganization', verbose_name='Контрагент')),
                ('editor', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sedstatement_editor', to=settings.AUTH_USER_MODEL)),
                ('int_integration_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='integration_type_subscription', to='dict_register.Subscription', verbose_name='Тарифний план')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='l_core.CoreOrganization')),
                ('web_tariff_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='web_tariff_plan_subscription', to='dict_register.Subscription', verbose_name='Тарифний план')),
            ],
            options={
                'verbose_name': 'Заявка на підключення до СЕВСЕД',
                'verbose_name_plural': 'Заявки на підключення до СЕВСЕД',
                'ordering': ['id'],
            },
            bases=(l_core.mixins.CheckProtected, l_core.mixins.RelatedObjects, models.Model),
        ),
        migrations.AddField(
            model_name='additionalservice',
            name='statement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='statement.SEDStatement'),
        ),
    ]
